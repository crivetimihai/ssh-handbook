<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_yjb_hcx_vs">
 <title>Secure Shell (SSH) at a glance</title>
 <abstract>Secure Shell (<keyword>SSH</keyword>) is an encrypted network protocol for initiating
  secure remote shell sessions. Users connect to a <keyword>SSH</keyword> server with an
   <keyword>SSH</keyword> client application and can execute remote shell commands on the remote
  machine over a secure channel.<shortdesc>The <keyword>PuTTY</keyword>
   <keyword>SSH Client</keyword> and <keyword>OpenSSH</keyword> (providing both client and server
   components) are common packages used to administer remote systems using the SSH protocol. You can
   use <keyword>PuTTY</keyword> or <keyword>OpenSSH</keyword> to interact with your Linux instances.
   </shortdesc><shortdesc>Using <keyword>SSH</keyword> keys allows you to
   secure your instances against common brute force attacks.</shortdesc></abstract>
 <prolog>
  <author>Mihai Criveti</author>
  <copyright>
   <copyryear year="2015"/>
   <copyrholder>Mihai Criveti</copyrholder>
  </copyright>
  <critdates>
   <created date="2015-07-23"/>
   <revised modified="2015-07-27"/>
  </critdates>
  <metadata>
   <category>SSH</category>
   <keywords>
    <indexterm>SSH</indexterm>
   </keywords>
  </metadata>
 </prolog>
 <conbody>
  <section><title>Using the PuTTY SSH Client on Windows</title><p><b>Download and Install PuTTY on
     Windows</b></p><p>Follow the instructions on the PuTTY homepage at <xref
     href="http://www.chiark.greenend.org.uk/%7Esgtatham/putty/" format="html" scope="external"
     >http://www.chiark.greenend.org.uk/~sgtatham/putty/</xref><fn>3rd party website subject to
     change</fn> to download and install PuTTY on your system.<ol id="ol_whv_hlz_xs">
     <li>Download the <b>ZIP</b> file containing all binaries and help files to get started, or
      download each tool individually.</li>
     <li>Unzip the PuTTY archive to a local directory.</li>
     <li importance="recommended">Verify the cryptographic hash (ex: MD5, SHA-1) and the
              <keyword>PuTTY</keyword> signature (GPG / RSA keys) as instructed in the
              <keyword>PuTTY</keyword> documentation.</li>
    </ol></p><b>Log into your instance using your username and password</b><p>You will need to know
    the IP address (or hostname), the <keyword>username</keyword> and <keyword>password</keyword> of
    the server you want to connect to.<ol id="ol_a4q_krh_ws">
     <li>Start <cmdname>PuTTY.exe</cmdname>.</li>
     <li>In the <uicontrol>Session</uicontrol> category, enter the <userinput>Host Name (or IP
       address)</userinput> of your server in the format <userinput>user@host</userinput>, provide a
      name for your session in <uicontrol>Saved Sessions</uicontrol> then click
       <uicontrol>Save</uicontrol> to save your session for future re-use.<note>Example:
        <userinput>root@10.0.0.1</userinput>, where 10.0.0.1 is your server address, and
        <keyword>root</keyword> is the username.</note></li>
     <li>Click <uicontrol>Open</uicontrol> to connect to your server.</li>
    </ol></p><b>Create an SSH key</b><p>Generate a RSA private and public key pair using
     <cmdname>PuTTYgen</cmdname>:<ol id="ol_ynl_xrh_ws">
     <li>Start <cmdname>PuttyGen.exe</cmdname> and click <uicontrol>Generate</uicontrol><fn>current
       versions of <cmdname>PuTTYGen</cmdname> will create a 2048 bit RSA key by default.</fn>.</li>
     <li>Click <uicontrol>Save private key</uicontrol> to save your PuTTY format (PPK) private
      key.</li>
     <li>Copy the text from the <uicontrol>Public key for pasting into OpenSSH authorized_keys
       file</uicontrol> field.<note>You will use this public key to authorize your user for SSH
       access.</note></li>
    </ol></p><b>Allow log in using public keys for your user</b><p>Place your <keyword>public
     key</keyword> in the <filepath>~/.ssh/authorized_hosts</filepath> file on each server you want
    to access using SSH keys.<ol id="ol_knp_3yh_ws">
     <li>Create the <filepath>.ssh</filepath> directory for your user, if it does not previously
      exist:<codeblock>[[ -d ~/.ssh ]] || mkdir ~/.ssh</codeblock></li>
     <li>Place the <uicontrol>Public key for pasting into OpenSSH authorized_keys file</uicontrol>
      generated above into the <filepath>~/.ssh/authorized_keys</filepath> file. Replace
       <userinput>PUBLIC_KEY</userinput> in the command below with your actual public key in
       <keyword>OpenSSH</keyword> format, as generated by
      <cmdname>PuTTYGen</cmdname>:<codeblock># Append a long line containing the private key to authorized_hosts:
echo 'PUBLIC_KEY' >> ~/.ssh/authorized_hosts
</codeblock></li>
     <li>Set restrictive permissions on the <filepath>.ssh</filepath> directory and files<fn>At this
       point, only the <filepath>authorized_keys</filepath> file may exist on your
      server.</fn>:<codeblock>chown -R $USER: ~/.ssh
chmod 700 ~/.ssh
chmod 644 ~/.ssh/authorized_keys</codeblock></li>
    </ol></p><b>Log into your instance using SSH keys</b><p>Load an existing session (or provide
    your server <userinput>username</userinput> and <uicontrol>Host Name</uicontrol> in the form:
     <userinput>user@hostname</userinput>) and perform the following steps to use SSH keys when
    connecting with <cmdname>PuTTY</cmdname>:<ol id="ol_umm_4t3_ws">
     <li>Under Category, navigate to <menucascade>
       <uicontrol>Connection</uicontrol>
       <uicontrol>SSH</uicontrol>
       <uicontrol>Auth</uicontrol>
      </menucascade>.</li>
     <li>In the <uicontrol>Authentication parameters</uicontrol> section, click
       <uicontrol>Browse</uicontrol> to select a <uicontrol>Private key file for
       authentication</uicontrol> and locate your private key in <keyword>PuTTY</keyword>
      <keyword>PPK</keyword> format.</li>
     <li>You can now navigate to <uicontrol>Session</uicontrol> if you want to
       <uicontrol>Save</uicontrol> your session, then click <uicontrol>Open</uicontrol> to connect
      using an <keyword>SSH</keyword> key.</li>
    </ol></p><b>Copy files using SCP</b><p>You can copy files to and from your server using PuTTY
     <cmdname>pscp.exe</cmdname>.</p><p>To receive files from a remote server: <codeph>pscp
     [options] [user@]host:source target</codeph>. </p><p>For example, to copy
     <filepath>/etc/hosts</filepath> from your server to
    <filepath>c:\temp\hosts.txt</filepath>:<codeblock>pscp user@host:/etc/hosts c:\temp\hosts.txt</codeblock>To
    send files to a remote server: <codeph>pscp [options] source [source...]
     [user@]host:target</codeph>. </p><p>For example, to copy <filepath>c:\temp\hosts.txt</filepath>
    to your server
    <filepath>/tmp/hosts</filepath>:<codeblock>pscp c:\temp\hosts.txt user@host:/tmp/hosts</codeblock></p></section>
  <section><title>Using OpenSSH SSH Client on Linux and Mac</title>If you're running
    <keyword>Linux</keyword>, <keyword>Mac</keyword> or another <keyword>UNIX</keyword>-like
   operating system, chances are your system already comes with an <keyword>SSH</keyword> client.
   Type <cmdname>ssh</cmdname> in a terminal. If the command is not recognized, you may need to
   install <keyword>OpenSSH</keyword> client packages.<p><b>Download and Install OpenSSH on
     Linux</b></p><p>Red Hat / CentOS / Fedora (yum based distributions):
    <codeblock># Search for the OpenSSH client package
yum search openssh
     
# Install the corresponding package on your distribution
yum install openssh-client</codeblock></p><p>Debian
    / Ubuntu (apt based
    distributions):<codeblock># Search for the OpenSSH client package
apt-get update &amp;&amp; apt-cache search openssh
       
# Install the corresponding package on your distribution
apt-get install openssh-client</codeblock>Other
    distributions / operating systems: check the instructions listed on <xref
     href="http://www.openssh.com" format="html" scope="external">http://www.openssh.com</xref> and
    / or your distribution specific documentation.</p><b>Log into your instance using a username and
    password</b><p>
    <codeblock>ssh user@host</codeblock>
   </p><b>Create a SSH key</b>
   <p>Create a <userinput>4096</userinput> bit <userinput>RSA</userinput> key in
     <filepath>~/.ssh/id_rsa</filepath> and provide a label
    <userinput>you@example.com</userinput>:</p><codeblock>ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -C "you@example.com"</codeblock><screen>Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/cmihai/.ssh/id_rsa.
Your public key has been saved in /home/cmihai/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:d8Mh5ffUFg1eAho7C4eg0IOFKih7AWDpVCIfPkS6Hl0 you@example.com
The key's randomart image is:
+---[RSA 4096]----+
|++B*. .   . o.ooo|
|+B+oo. . . * . o+|
|=o+ .E  o * o o +|
|=oo..    o = o + |
|+o o    S o +   .|
|o o      . . .   |
| o               |
|                 |
|                 |
+----[SHA256]-----+</screen><b>Allow
    log in using public keys for your user</b><codeblock>ssh-copy-id user@host</codeblock><b>Log
    into your instance using SSH
    keys</b><codeblock>ssh -i ~/.ssh/id_rsa user@host</codeblock><b>Copy files using
   SCP</b><codeblock># Copy /remote/file on a remote host to /local/file:
scp -i ~/.ssh/id_rsa user@host:/remote/file /local/file
    
# Copy a directory recursively from /remote/dir to /local/dir
scp -i ~/.ssh/id_rsa -r user@host:/remote/dir /local/dir
   
# "Upload" a local directory to a remote host:
scp -i ~/.ssh/id_rsa -r /local/dir user@host:/remote/dir</codeblock></section>
 </conbody>
</concept>
